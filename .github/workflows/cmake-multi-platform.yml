name: Build and Install Lua with CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build Lua from source (Linux)
      if: runner.os == 'Linux'
      run: |
        git clone https://github.com/lua/lua.git
        cd lua
        make generic
        sudo cp lua /usr/local/bin/
        sudo cp luac /usr/local/bin/
        sudo cp lua.h luaconf.h lualib.h lauxlib.h /usr/local/include/
        sudo cp liblua.a /usr/local/lib/

    - name: Build Lua from source (Windows)
      if: runner.os == 'Windows'
      run: |
        git clone https://github.com/lua/lua.git
        cd lua
        make mingw
        cp lua.exe /usr/local/bin/lua.exe
        cp luac.exe /usr/local/bin/luac.exe
        cp lua.h luaconf.h lualib.h lauxlib.h /usr/local/include/
        cp liblua.a /usr/local/lib/

    - name: Build your program with CMake
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

